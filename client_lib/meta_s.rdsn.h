/**
 * Autogenerated by Thrift Compiler (@PACKAGE_VERSION@)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef meta_s_rDSN_H
#define meta_s_rDSN_H

#include "replication_types.h"
#include <dsn/serverlet.h>
#include <iostream>

namespace dsn { namespace replication {


// define task code for svc 'meta_s'
DEFINE_TASK_CODE(LPC_META_S_CIENT_TEST_TIMER, ::dsn::TASK_PRIORITY_COMMON, THREAD_POOL_REPLICATION)


// server
template <typename T> // where T : meta_s_service<T>
class meta_s_service 
	: public ::dsn::service::serverlet<T>
{
public:
	meta_s_service() : ::dsn::service::serverlet<T>("meta_s") {}
	virtual ~meta_s_service() {}

protected:
	// all service handlers to be implemented further

public:
	void open_service()
	{
	}

	void close_service()
	{
	}
};


// sync client
class meta_s_client
{
public:
};


// async client
class meta_s_async_client 
	: public virtual ::dsn::service::servicelet
{
public:

};


}} // namespace


#endif
