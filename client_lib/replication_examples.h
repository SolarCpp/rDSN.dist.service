/**
 * Autogenerated by Thrift Compiler (@PACKAGE_VERSION@)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include "replica_s.rdsn.h"
#include "meta_s.rdsn.h"

namespace dsn { namespace replication {


class replica_s_service_example_impl : public replica_s_service<replica_s_service_example_impl>
{
public:
};

class meta_s_service_example_impl : public meta_s_service<meta_s_service_example_impl>
{
public:
};

// shared server app
class replication_server_app : public ::dsn::service::service_app
{
public:
	replication_server_app(::dsn::service_app_spec* s, ::dsn::configuration_ptr c) 
		: ::dsn::service::service_app(s, c) {}

	virtual ::dsn::error_code start(int argc, char** argv)
	{
		_replica_s_svc.open_service();
		_meta_s_svc.open_service();
		return ::dsn::ERR_SUCCESS;
	}

	virtual void stop(bool cleanup = false)
	{
		_replica_s_svc.close_service();
		_meta_s_svc.close_service();
	}

private:
	 replica_s_service_example_impl _replica_s_svc;
	 meta_s_service_example_impl _meta_s_svc;
};


DEFINE_TASK_CODE(LPC_REPLICATION_TEST_CLIENT_TIMER, ::dsn::TASK_PRIORITY_COMMON, THREAD_POOL_REPLICATION)

// shared client app
class replication_client_app : public ::dsn::service::service_app, public virtual ::dsn::service::servicelet
{
public:
	replication_client_app(::dsn::service_app_spec* s, ::dsn::configuration_ptr c) 
		: ::dsn::service::service_app(s, c) {}

	virtual ::dsn::error_code start(int argc, char** argv)
	{
		if (argc < 3)
			return ::dsn::ERR_INVALID_PARAMETERS;

		_server = ::dsn::end_point(argv[1], (uint16_t)atoi(argv[2]));
		_timer = ::dsn::service::tasking::enqueue(LPC_REPLICATION_TEST_CLIENT_TIMER, this, &replication_client_app::on_test_timer, 0, 0, 1000);
		return ::dsn::ERR_SUCCESS;
	}

	virtual void stop(bool cleanup = false)
	{
		_timer->cancel(true);
	}

	void on_test_timer()
	{
	}

private:
	::dsn::task_ptr _timer;
	::dsn::end_point _server;
	 replica_s_async_client _replica_s_client;
	 meta_s_async_client _meta_s_client;
};


}} // namespace

