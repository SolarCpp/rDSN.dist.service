# Case Description:
# - inject assign_primary proposal
# - inject update_partition_configuration

set:load_balance_for_test=1,not_exit_on_log_failure=1

# initial config
config:{0,-,[]}

# start to do load balance
# inject assign_primary proposal to r1
inject:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1

# meta will restart load balance,
# and assign primary to r1 again
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1

# inject update_partition_configuration (timeout is 5 seconds)
inject:on_rpc_call:rpc_name=RPC_CM_UPDATE_PARTITION_CONFIGURATION,from=r1,to=m

# r1 start to do config_sync (config_sync_interval_ms=3000)
wait:on_rpc_call:rpc_name=RPC_CM_QUERY_NODE_PARTITIONS,from=r1,to=m

# r1 restart to update_partition_configuration
wait:on_rpc_call:rpc_name=RPC_CM_UPDATE_PARTITION_CONFIGURATION,from=r1,to=m

# r1 received config_sync ack, according it, new created replica on r1 is not exist on meta,
# so the replica will be changed to ERROR, and removed after all.
wait:on_task_begin:node=r1,task_code=RPC_CM_QUERY_NODE_PARTITIONS_ACK
wait:on_task_begin:node=r1,task_code=LPC_QUERY_NODE_CONFIGURATION_SCATTER
state:{{r1,err,0,0}}
state:{}

# meta received update_partition_configuration from r1, and change the config
wait:on_task_begin:node=m,task_code=RPC_CM_UPDATE_PARTITION_CONFIGURATION
config:{1,r1,[]}

# then meta start another round of load balance, want to assign secondary to r2,
# but this will be ignored because replica on r1 is not exist any more
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1

# r1 start to do config_sync again
wait:on_rpc_call:rpc_name=RPC_CM_QUERY_NODE_PARTITIONS,from=r1,to=m

# r1 received config_sync ack, according it, replica is not exist on r1,
# so the replica will be remove from meta by update_partition_configuration
wait:on_task_begin:node=r1,task_code=RPC_CM_QUERY_NODE_PARTITIONS_ACK
wait:on_task_begin:node=r1,task_code=LPC_QUERY_NODE_CONFIGURATION_SCATTER
wait:on_rpc_call:rpc_name=RPC_CM_UPDATE_PARTITION_CONFIGURATION,from=r1,to=m

# meta received update_partition_configuration from r1, and change the config
wait:on_task_begin:node=m,task_code=RPC_CM_UPDATE_PARTITION_CONFIGURATION
config:{2,-,[]}

# and then, all back to normal, after some time, the meta will assign primary and secondaries again
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1
config:{3,r1,[]}
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1
config:{4,r1,[r2]}
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1
config:{5,r1,[r2,r3]}
state:{{r1,pri,5,0},{r2,sec,5,0},{r3,sec,5,0}}

